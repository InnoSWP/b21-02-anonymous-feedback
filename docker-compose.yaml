version: "3.9"

services:
  db:
    image: postgres
    volumes:
      # TODO: find out why use that
      # - app-db-data:/var/lib/postgresql/data/pgdata
      - ${DOCKER_PROJECT_PATH:-.}/data/pgdata:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - PGDATA=/var/lib/postgresql/data/pgdata

  redis:
    image: redis
    volumes:
      - ${DOCKER_PROJECT_PATH:-.}/redis_data:/data

  db-test:
    image: postgres
    env_file:
      - .env
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB

  bot:
    build: ./bot
    environment:
      - BOT_API_TOKEN
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
      - REDIS_PORT
    volumes:
      - ${DOCKER_PROJECT_PATH:-.}/bot:/app/bot
      - ${DOCKER_PROJECT_PATH:-.}/db:/app/db
    command: sh -c 'wait-for -t 30 db:5432 -- python bot/main.py'

  backend:
    build: ./backend
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST=db
      - SECRET_KEY
      - TZ=Europe/Moscow
    volumes:
      #TODO: duplicate
      - ${DOCKER_PROJECT_PATH:-.}/backend:/app/backend
      - ${DOCKER_PROJECT_PATH:-.}/db:/app/db
    # ports:
    #   - "80:80"
    command: sh -c 'wait-for -t 30 db:5432 -- uvicorn --host 0.0.0.0 --port 80 backend.main:app'

  frontend:
    build: ./frontend
    ports:
      - "1028:8000"
    command: sh -c 'wait-for -t 40 backend:80 -- nginx -g "daemon off;"'

  backend-tests:
    build: ./backend
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_HOST=db-test
      - SECRET_KEY
      - PYTHONPATH=/app
    volumes:
      - ${DOCKER_PROJECT_PATH:-.}/backend:/app/backend
      - ${DOCKER_PROJECT_PATH:-.}/db:/app/db
    command: sh -c 'wait-for -t 60 db-test:5432 -- pytest --cov=backend /app/backend/tests'
