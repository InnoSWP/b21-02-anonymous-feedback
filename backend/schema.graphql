type Query {
  session(id: ID!): Session!
}

type Mutation {
  createSession(name: String!): Session!
  closeSession(id: ID!): Session!
}

type Subscription {
  watchSession(id: ID!): Message!
}

# Sessions

type Session {
  id: ID!
  name: String!
  created: Timestamp!
  closed: Timestamp
  messages: [Message!]!
}

type Message {
  id: ID!
  timestamp: Timestamp!
  content: MessageContent!
}

union MessageContent = Text | Rating

type Text {
  text: String!
}

type Rating {
  # An integer between 1 and 5
  rating: Int!
}

# Utility types

type Timestamp {
  # Timestamp in ISO format
  timestamp: String!
}
